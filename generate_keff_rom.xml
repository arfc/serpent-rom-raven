<Simulation verbosity="all" 
            xml:base="./aux-input-files/" 
            xmlns:xi="http://www.w3.org/2001/XInclude">
  <RunInfo>
    <WorkingDir>data</WorkingDir>
    <!-- ordered list of step names that RAVEN will run -->
    <Sequence>get_input, make_rom, rom_dump</Sequence>
    <!-- number of parallel runs executed simultaneously -->
    <batchSize>6</batchSize>
  </RunInfo>

  <VariableGroups>
    <Group name="feature_space"><xi:include href="feature_isotopes">,deptime</Group>
    <Group name="target_space">boc_keff, eoc_keff</Group>
  </VariableGroups>

  <Files>
    <Input name="rom_output"    type="">keff_rom</Input>
    <Input name="inputcsv" type="">1600_startup_composition_deptime.csv</Input>
  </Files>

  <Models>
    <!-- Defines ROM specifics, from library(subType),
         independent variable(Features), dependent variable(Target),
         algorithm (SKLtype) and etc. -->
    <ROM name='rom' subType='SciKitLearn'>
      <Features>feature_space</Features>
      <Target>target_space</Target>
      <SKLtype>linear_model|LinearRegression</SKLtype>
      <fit_intercept>True</fit_intercept>
      <normalize>False</normalize>
    </ROM>
  </Models>



  <Steps>
    <IOStep name="get_input">
      <!-- In the IOStep the serpent-output-converted-csv files are logged into output-->
      <Input  class="Files" type=""   >inputcsv</Input>
      <Output  class="DataObjects"  type="PointSet"     >inputdata</Output>
    </IOStep>
    <RomTrainer name='make_rom'>
      <!-- Given the dataset, generate ROM using Scikit-learn -->
      <Input class='DataObjects'   type='PointSet'  >inputdata</Input>
      <Output class='Models'     type='ROM'         >rom</Output>
    </RomTrainer>
    <IOStep name='rom_dump'>
      <!-- Save the rom as rom_output-->
      <Input class='Models'      type='ROM'         >rom</Input>
      <Output class='Files'      type=''            >rom_output</Output>
    </IOStep>
  </Steps>

  <DataObjects>
    <!-- Specifies the output objects, just the rows from the
         serpent-output-converted-csv file with column name -->
    <PointSet name="inputdata">
      <Input>feature_space</Input>
      <Output>target_space</Output>
    </PointSet>
  </DataObjects>

</Simulation>
