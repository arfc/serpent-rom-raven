<?xml version="1.0" ?>
<Simulation verbosity="all">
  <RunInfo>
    <WorkingDir>serpent-raven</WorkingDir>
    <!-- ordered list of step names that RAVEN will run -->
    <Sequence>get_input, make_crit_rom, crit_rom_dump</Sequence>
    <!-- number of parallel runs executed simultaneously -->
    <batchSize>6</batchSize>
  </RunInfo>

  <Files>
    <Input name="crit_rom_output"    type="">crit_rom_output</Input>
  </Files>

  <Models>
    <!-- Defines ROM specifics, from library(subType),
         independent variable(Features), dependent variable(Target),
         algorithm (SKLtype) and etc. -->
    <ROM name='crit_rom' subType='SciKitLearn'>
      <Features>fresh_comp</Features>
      <Target>keff</Target>
      <SKLtype>linear_model|LinearRegression</SKLtype>
      <fit_intercept>True</fit_intercept>
      <normalize>False</normalize>
    </ROM>
  </Models>

  <Steps>
    <IOStep name="get_input">
      <!-- In the IOStep the serpent-output-converted-csv files are logged into output-->
      <Input  class="Databases" type="HDF5"   >db</Input>
      <Output  class="DataObjects"  type="PointSet"     >db_object</Output>
    </IOStep>
    <RomTrainer name='make_crit_rom'>
      <!-- Given the dataset, generate ROM using Scikit-learn -->
      <Input class='DataObjects'   type='PointSet'  >db_object</Input>
      <Output class='Models'     type='ROM'         >dep_rom</Output>
    </RomTrainer>
    <IOStep name='crit_rom_dump'>
      <!-- Save the rom as rom_output-->
      <Input class='Models'      type='ROM'         >crit_rom</Input>
      <Output class='Files'      type=''            >crit_rom_output</Output>
    </IOStep>
  </Steps>

  <Databases>
    <HDF5 name="db" filename="db_saltproc.hdf5" readMode='read' directory='./'/>
  </Databases>

  <DataObjects>
    <!-- Specifies the output objects, just the rows from the
         serpent-output-converted-csv file with column name -->
    <PointSet name="outPointSet">
      <Input>fresh_comp</Input>
      <Output>keff</Output>
    </PointSet>
  </DataObjects>

</Simulation>
